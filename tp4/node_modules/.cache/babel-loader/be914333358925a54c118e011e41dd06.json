{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'src-components-http-usuarios',\n  props: [],\n  mounted: function mounted() {},\n  data: function data() {\n    return {\n      url: \"https://6284336ba48bd3c40b6c2bf9.mockapi.io/Usuarios\"\n    };\n  },\n  methods: {\n    wrappersXHRpromise: function wrappersXHRpromise() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"get\", _this.url);\n        xhr.addEventListener(\"load\", function () {\n          if (xhr.status == 200) {\n            var respuesta = JSON.parse(xhr.response);\n            resolve(respuesta);\n          }\n\n          xhr.addEventListener(\"error\", function (e) {\n            var error = {\n              title: \"Error xhr cb(status)\",\n              status: e\n            };\n            reject(error);\n          });\n        });\n      });\n    }\n  },\n  computed: {}\n};","map":{"version":3,"mappings":";;;;;;;;;AASA;EACAA,oCADA;EAEAC,SAFA;EAGAC,OAHA,qBAGA,CAEA,CALA;EAMAC,IANA,kBAMA;IACA;MACAC;IADA;EAGA,CAVA;EAWAC;IACAC,kBADA,gCACA;MAAA;;MACA;QACA;QACAC;QACAA;UACA;YACA;YACAC;UACA;;UACAD;YACA;cACAE,6BADA;cAEAC;YAFA;YAIAC;UACA,CANA;QAOA,CAZA;MAaA,CAhBA;IAiBA;EAnBA,CAXA;EAgCAC;AAhCA","names":["name","props","mounted","data","url","methods","wrappersXHRpromise","xhr","resolve","title","status","reject","computed"],"sourceRoot":"src/components","sources":["HttpUsuarios.vue"],"sourcesContent":["<template>\n\n  <section class=\"src-components-http-usuarios\">\n    <h1>src-components-http-usuarios Component</h1>\n  </section>\n\n</template>\n\n<script>\n  export default  {\n    name: 'src-components-http-usuarios',\n    props: [],\n    mounted () {\n\n    },\n    data () {\n      return {\n        url:\"https://6284336ba48bd3c40b6c2bf9.mockapi.io/Usuarios\"\n      }\n    },\n    methods: {\n      wrappersXHRpromise(){\n        return new Promise((resolve,reject)=>{\n          const xhr = new XMLHttpRequest();\n          xhr.open(\"get\",this.url)\n          xhr.addEventListener(\"load\",()=>{\n            if(xhr.status==200){\n              let respuesta = JSON.parse(xhr.response);\n              resolve(respuesta);\n            } \n            xhr.addEventListener (\"error\",(e)=>{\n              let error = {\n                title: \"Error xhr cb(status)\", \n                status: e,\n              };\n            reject(error);\n            });\n          });\n        });\n      },\n    },\n    computed: {\n\n    }\n}\n\n\n</script>\n\n<style scoped lang=\"css\">\n  \n</style>\n"]},"metadata":{},"sourceType":"module"}